daggerPlugins.forEach{
    apply plugin: it
}



android {
    compileSdk compileAppSdk
    namespace 'com.choice.splash'

    buildTypes {
        debug {
            buildConfigField "String", "APP_NAME", "\"StreetMap\""
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "String", "APP_NAME", "\"StreetMap\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion COMPOSE_COMPILER
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}
kapt {
    correctErrorTypes = true
}
dependencies {

    implementation project(path: ':feature')
    implementation project(path: ':design')

    kotlinLibImp.forEach{
        add(it.configuration, it.dependency)
    }

    jetpackComposeImp.forEach{
        add(it.configuration, it.dependency)
    }

    daggerAndroidImp.forEach {
        add(it.configuration, it.dependency)
    }

    dataStoreImp.forEach {
        add(it.configuration, it.dependency)
    }

    roomImp.forEach {
        add(it.configuration, it.dependency)
    }

    retrofitImp.forEach {
        add(it.configuration, it.dependency)
    }

    workerImp.forEach {
        add(it.configuration, it.dependency)
    }

    accompanistImp.forEach {
        add(it.configuration, it.dependency)
    }

    testingHandler.forEach {
        add(it.configuration, it.dependency)
    }
}